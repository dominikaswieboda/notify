/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: "HelveticaNeue-Roman";
  src: url("../fonts/HelveticaNeue-Roman.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeue-Roman.otf") format("opentype"), url("../fonts/HelveticaNeue-Roman.woff") format("woff"), url("../fonts/HelveticaNeue-Roman.ttf") format("truetype"), url("../fonts/HelveticaNeue-Roman.svg#HelveticaNeue-Roman") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "../fonts/HelveticaNeue-BoldItalic";
  src: url("../fonts/HelveticaNeue-BoldItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeue-BoldItalic.woff") format("woff"), url("../fonts/HelveticaNeue-BoldItalic.ttf") format("truetype"), url("../fonts/HelveticaNeue-BoldItalic.svg#HelveticaNeue-BoldItalic") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "../fonts/HelveticaNeue-Italic";
  src: url("../fonts/HelveticaNeue-Italic.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeue-Italic.woff") format("woff"), url("../fonts/HelveticaNeue-Italic.ttf") format("truetype"), url("../fonts/HelveticaNeue-Italic.svg#HelveticaNeue-Italic") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "../fonts/HelveticaNeue-Medium";
  src: url("../fonts/HelveticaNeue-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeue-Medium.woff") format("woff"), url("../fonts/HelveticaNeue-Medium.ttf") format("truetype"), url("../fonts/HelveticaNeue-Medium.svg#HelveticaNeue-Medium") format("svg");
  font-weight: normal;
  font-style: normal; }

/**
 * Owl Carousel v2.3.4
 * Copyright 2013-2018 David Deutsch
 * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE
 */
.owl-carousel,
.owl-carousel .owl-item {
  -webkit-tap-highlight-color: transparent;
  position: relative; }

.owl-carousel {
  display: none;
  width: 100%;
  z-index: 1; }

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
  touch-action: manipulation;
  -moz-backface-visibility: hidden; }

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0; }

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  -webkit-transform: translate3d(0, 0, 0); }

.owl-carousel .owl-item,
.owl-carousel .owl-wrapper {
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  -ms-backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0); }

.owl-carousel .owl-item {
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-touch-callout: none; }

.owl-carousel .owl-item img {
  display: block;
  width: 100%; }

.owl-carousel .owl-dots.disabled,
.owl-carousel .owl-nav.disabled {
  display: none; }

.no-js .owl-carousel,
.owl-carousel.owl-loaded {
  display: block; }

.owl-carousel .owl-dot,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-nav .owl-prev {
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel .owl-nav button.owl-next,
.owl-carousel .owl-nav button.owl-prev,
.owl-carousel button.owl-dot {
  background: 0 0;
  color: inherit;
  border: none;
  padding: 0 !important;
  font: inherit; }

.owl-carousel.owl-loading {
  opacity: 0;
  display: block; }

.owl-carousel.owl-hidden {
  opacity: 0; }

.owl-carousel.owl-refresh .owl-item {
  visibility: hidden; }

.owl-carousel.owl-drag .owl-item {
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel.owl-grab {
  cursor: move;
  cursor: grab; }

.owl-carousel.owl-rtl {
  direction: rtl; }

.owl-carousel.owl-rtl .owl-item {
  float: right; }

.owl-carousel .animated {
  animation-duration: 1s;
  animation-fill-mode: both; }

.owl-carousel .owl-animated-in {
  z-index: 0; }

.owl-carousel .owl-animated-out {
  z-index: 1; }

.owl-carousel .fadeOut {
  animation-name: fadeOut; }

@keyframes fadeOut {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

.owl-height {
  transition: height 0.5s ease-in-out; }

.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  transition: opacity 0.4s ease; }

.owl-carousel .owl-item .owl-lazy:not([src]),
.owl-carousel .owl-item .owl-lazy[src^=""] {
  max-height: 0; }

.owl-carousel .owl-item img.owl-lazy {
  transform-style: preserve-3d; }

.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000; }

.owl-carousel .owl-video-play-icon {
  position: absolute;
  height: 80px;
  width: 80px;
  left: 50%;
  top: 50%;
  margin-left: -40px;
  margin-top: -40px;
  background: url(owl.video.play.png) no-repeat;
  cursor: pointer;
  z-index: 1;
  -webkit-backface-visibility: hidden;
  transition: transform 0.1s ease; }

.owl-carousel .owl-video-play-icon:hover {
  -ms-transform: scale(1.3, 1.3);
  transform: scale(1.3, 1.3); }

.owl-carousel .owl-video-playing .owl-video-play-icon,
.owl-carousel .owl-video-playing .owl-video-tn {
  display: none; }

.owl-carousel .owl-video-tn {
  opacity: 0;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: contain;
  transition: opacity 0.4s ease; }

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  height: 100%;
  width: 100%; }

body {
  font-family: "HelveticaNeue-Roman", sans-serif;
  font-weight: 400;
  background: #2ecc71;
  border-top: 10px solid #2ecc71; }

* {
  box-sizing: border-box; }

.container {
  width: 1210px;
  max-width: 100%;
  margin: 0 auto;
  padding-right: 15px;
  padding-left: 15px;
  overflow: hidden; }
  @media (max-width: 1280px) {
    .container {
      width: 790px; } }
  @media (max-width: 956px) {
    .container {
      width: 600px; } }
  @media (max-width: 768px) {
    .container {
      width: 420px; } }
  @media (max-width: 480px) {
    .container {
      padding-right: 10px;
      padding-left: 10px;
      width: 100%; } }

img {
  width: 100%; }

a {
  text-decoration: none;
  cursor: pointer;
  transition: all 0.5s ease; }

ul {
  list-style-type: none; }

.lead {
  font-family: "HelveticaNeue-Medium", sans-serif;
  font-weight: 400;
  font-size: 24px;
  line-height: 36px;
  margin: 0;
  padding: 20px 0;
  color: #ffffff; }

p {
  font-family: "HelveticaNeue-Roman", sans-serif;
  font-weight: 400;
  margin: 0;
  font-size: 16px;
  line-height: 26px;
  color: #848484; }

h3 {
  font-family: "Raleway", sans-serif;
  font-weight: 600;
  font-size: 22px;
  line-height: 18px;
  margin: 0;
  color: #222222; }

h6 {
  font-family: "Raleway", sans-serif;
  font-weight: 600;
  font-size: 22px;
  line-height: 18px;
  margin: 0;
  color: #222222; }

.text-center {
  text-align: center; }

.btn-main {
  font-family: "Raleway", sans-serif;
  font-weight: 700;
  font-size: 22px;
  line-height: 18px;
  display: inline-block;
  padding: 15px 25px;
  border: none;
  outline: none;
  cursor: pointer; }

.btn-main {
  color: #ffffff;
  background: #2ecc71; }
  .btn-main:hover {
    opacity: 0.7;
    transition: all 0.5s ease; }

.header {
  background-image: url("../img/notify.jpg");
  background-position: center bottom;
  background-size: cover;
  min-height: 600px; }
  .header__content {
    padding-left: 116px; }
    @media (max-width: 1280px) {
      .header__content {
        padding-left: 0; } }
  .header__title {
    font-family: "Pacifico", sans-serif;
    font-weight: 400;
    font-size: 57px;
    line-height: 105px;
    margin-top: 145px;
    margin-bottom: 0;
    color: #ffffff; }
  .header .dot {
    color: #2ecc71; }
  .header .lead {
    font-size: 25px;
    line-height: 36px;
    margin-top: 26px;
    padding-top: 0;
    padding-bottom: 0;
    padding-right: 586px; }
    @media (max-width: 1280px) {
      .header .lead {
        padding-right: 308px; } }
    @media (max-width: 768px) {
      .header .lead {
        padding-right: 150px; } }
  .header__icons {
    margin-top: 20px; }
    .header__icons a {
      display: inline-block;
      position: relative;
      top: 0;
      left: 0;
      width: 55px;
      height: 55px;
      background: rgba(0, 0, 0, 0.3);
      border: none;
      border-radius: 50%;
      text-align: center; }
      .header__icons a i {
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        font-size: 32px;
        color: rgba(255, 255, 255, 0.4); }
      .header__icons a + a {
        margin-left: 10px; }
      .header__icons a:hover {
        background: #2ecc71; }
        .header__icons a:hover i {
          color: white; }

.advantages {
  background: #ffffff; }
  .advantages__items {
    margin-top: 60px;
    margin-bottom: 57px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-line-pack: center;
        align-content: center; }
    @media (max-width: 956px) {
      .advantages__items {
        -ms-flex-direction: column;
            flex-direction: column; } }
  .advantages__item {
    width: 27%; }
    @media (max-width: 956px) {
      .advantages__item {
        width: 100%;
        padding-bottom: 25px; } }
    .advantages__item span {
      position: relative;
      top: 0;
      left: 0;
      display: block;
      background: #2ecc71;
      width: 100px;
      height: 100px;
      outline: none;
      border-radius: 50%;
      text-align: center;
      margin: 0 auto; }
      .advantages__item span i {
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        font-size: 48px;
        color: #fff; }
  .advantages h3 {
    margin-top: 29px;
    margin-right: 3px; }
  .advantages p {
    margin-top: 21px;
    margin-right: 4px; }

.newsletter {
  background: #e3e3e3; }
  .newsletter__content {
    margin-top: 56px;
    margin-bottom: 60px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-line-pack: center;
        align-content: center;
    -ms-flex: 1;
        flex: 1; }
    @media (max-width: 1280px) {
      .newsletter__content {
        -ms-flex-direction: column;
            flex-direction: column;
        text-align: center; } }
  .newsletter__video {
    margin-left: 134px;
    min-width: 500px;
    height: 305px; }
    @media (max-width: 1280px) {
      .newsletter__video {
        margin-top: 60px;
        margin-left: 0;
        min-width: 100%;
        height: auto; } }
    .newsletter__video .iframe-wrapper {
      position: relative;
      width: 100%;
      height: 0;
      padding-bottom: 56.25%;
      overflow: hidden;
      border-radius: 10px; }
    .newsletter__video iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%; }
  .newsletter__text h3 {
    margin-bottom: 21px; }
  .newsletter form {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: start;
        justify-content: flex-start;
    margin-top: 24px; }
    @media (max-width: 1280px) {
      .newsletter form {
        -ms-flex-pack: center;
            justify-content: center; } }
    .newsletter form input {
      width: 56%;
      outline: none;
      border: none;
      padding: 19px 0 16px 28px;
      border-radius: 15px 0 0 15px;
      font-size: 18px; }
      .newsletter form input::-webkit-input-placeholder {
        /* Chrome/Opera/Safari */
        color: #848484; }
      .newsletter form input::-moz-placeholder {
        /* Firefox 19+ */
        color: #848484; }
      .newsletter form input:-ms-input-placeholder {
        /* IE 10+ */
        color: #848484; }
      .newsletter form input:-moz-placeholder {
        /* Firefox 18- */
        color: #848484; }
    .newsletter form .btn-main {
      padding: 15px 37px;
      border-radius: 0 15px 15px 0; }

.testimonials {
  background: #ffffff; }
  .testimonials__content {
    margin: 54px 0;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
  .testimonials .lead {
    font-family: "HelveticaNeue-Italic";
    font-style: italic;
    font-weight: 400;
    font-size: 20px;
    padding: 0 169px;
    line-height: 28px;
    color: #848484; }
    @media (max-width: 1280px) {
      .testimonials .lead {
        padding: 0; } }
    @media (max-width: 956px) {
      .testimonials .lead {
        font-size: 18px; } }
  .testimonials h4 {
    font-family: "Releway", sans-serif;
    font-weight: 700;
    font-size: 18px;
    line-height: 20px;
    margin: 20px 12px 26px 0; }
  .testimonials .owl-dots {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
    @media (max-width: 956px) {
      .testimonials .owl-dots {
        -ms-flex-wrap: wrap;
            flex-wrap: wrap; } }
    .testimonials .owl-dots .owl-dot {
      display: block;
      width: 50px;
      height: 50px;
      border: none;
      outline: none;
      margin: 0 5px;
      position: relative; }
      @media (max-width: 956px) {
        .testimonials .owl-dots .owl-dot {
          margin-top: 5px; } }
      .testimonials .owl-dots .owl-dot:after {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        transition: 0.3s ease;
        background: transparent;
        z-index: 1; }
      .testimonials .owl-dots .owl-dot:hover::after, .testimonials .owl-dots .owl-dot.active::after {
        background: #2ecc71;
        opacity: 0.3; }
  .testimonials__socials {
    margin-top: 62px; }
    .testimonials__socials h3 {
      font-family: "Raleway", sans-serif;
      font-weight: 600;
      font-size: 24px; }
    .testimonials__socials p {
      margin-top: 20px; }
    .testimonials__socials .icons {
      margin-top: 19px; }
      .testimonials__socials .icons a {
        display: inline-block;
        position: relative;
        top: 0;
        left: 0;
        width: 30px;
        height: 30px;
        background: rgba(0, 0, 0, 0.3);
        border: none;
        border-radius: 50%;
        text-align: center;
        margin: 5px; }
        .testimonials__socials .icons a i {
          position: absolute;
          top: 50%;
          left: 50%;
          -ms-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%);
          font-size: 19px;
          color: #fff; }
        .testimonials__socials .icons a:hover {
          background: #2ecc71; }

.footer {
  background: #e3e3e3; }
  .footer__content {
    margin: 57px 0;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
    @media (max-width: 768px) {
      .footer__content {
        margin: 25px 0; } }
    .footer__content ul {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: center;
          justify-content: center;
      -ms-flex-align: center;
          align-items: center;
      margin: 0;
      padding: 0;
      width: 100%; }
      @media (max-width: 768px) {
        .footer__content ul {
          -ms-flex-direction: column;
              flex-direction: column; } }
    .footer__content li + li {
      margin-left: 35px; }
      @media (max-width: 768px) {
        .footer__content li + li {
          margin-left: 0;
          padding-top: 15px; } }
    .footer__content a {
      color: #848484; }
      .footer__content a:hover {
        color: #2ecc71; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
